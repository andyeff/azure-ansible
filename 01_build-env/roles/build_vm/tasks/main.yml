---
# Role tasks file

- name: Get subscription ID from credential
  set_fact:
    cred_subscription_id: "{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}"

- name: Subscription ID check
  assert:
    msg: "Inventory id {{ subscription_id }} MUST match credential id {{ cred_subscription_id }}"
    that: (subscription_id == cred_subscription_id)  
  run_once: true

# Optional step
- name: Create public ip
  azure_rm_publicipaddress:
    resource_group: "{{ resource_groups[0]['name'] }}"
    allocation_method: Static
    name: "{{ inventory_hostname }}_ip"
  delegate_to: localhost
  when: (needs_public_ip is defined) and (needs_public_ip == True)
  register: pub_ip

- name: Store public ip
  set_fact:
    ip_name: "{{ pub_ip.state.name }}"
  when: (pub_ip.state is defined) and ( pub_ip.state.name is defined)

- name: Create NIC
  azure_rm_networkinterface:
    resource_group: "{{ resource_groups[0]['name'] }}"
    name: "{{ inventory_hostname }}_nic"
    virtual_network: "{{ virtual_networks[0]['name'] }}"
    subnet: "{{ subnets[0]['name'] }}"
    ip_configurations:
      - name: ipconfig1
        private_ip_address: "{{ ansible_host }}"
        public_ip_address_name: "{{ ip_name | default('') }}"
        private_ip_allocation_method: Static
        primary: true
    security_group: "{{ nic_sg | default('') }}"
  delegate_to: localhost

- name: Create VM
  azure_rm_virtualmachine:
    resource_group: "{{ resource_groups[0]['name'] }}"
    name: "{{ inventory_hostname }}"
    vm_size: "{{ vm_size }}"
    managed_disk_type: "{{ managed_disk_type }}"
    admin_username: "{{ admin_username }}"
    ssh_password_enabled: false
    ssh_public_keys:
      - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
        key_data: "{{ public_key }}"
    network_interface_names: "{{ inventory_hostname }}_nic"
    image:
      offer: "{{ image.offer }}"
      publisher: "{{ image.publisher }}"
      sku: "{{ image.sku }}"
      version: "{{ image.version }}"
  delegate_to: localhost
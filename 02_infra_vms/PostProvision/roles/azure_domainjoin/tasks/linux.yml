---
- name: "Configure software for domain joining - Ubuntu"
  apt:
    name:
      - krb5-user
      - samba-common
      - sssd
    force_apt_get: yes
    state: present
    update_cache: no
  become: true
  when: ansible_os_family | lower == 'debian'

- name: "Configure software for domain joining - RHEL"
  yum:
    name:
      - krb5-workstation
      - samba-common
      - samba-common-tools
      - sssd
      - authconfig
      - openldap-clients
    state: present
    update_cache: yes
  become: true
  when: ansible_os_family | lower == 'redhat'

- name: "Copy krb configuration"
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
  become: true

- name: "Copy samba configuration"
  template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    owner: root
    group: root
  become: true

- name: "Configure ubuntu make-home-directory"
  lineinfile:
    path: /etc/pam.d/common-session
    insertafter: 'session required        pam_unix.so'
    line: 'session required        pam_mkhomedir.so skel=/etc/skel/ umask=0077'
    state: present
  when: ansible_os_family | lower == 'debian'
  become: true

- name: "Remove existing kerberos tickets"
  command: /bin/kdestroy -q
  become: true
  when: ansible_os_family | lower == "redhat"

- name: "Remove existing kerberos tickets"
  command: /usr/bin/kdestroy -q
  become: true
  when: ansible_os_family | lower == "debian"


- name: "Obtain domain-join kerberos ticket"
  shell: |
    echo "{{ domain_join_password }}" | kinit "{{ domain_join_user }}"
    klist
  # no_log: True
  become: true


- name: "Attempt domain join"
  command: '/usr/bin/net ads join -f createcomputer="{{ domain_ou_path }}" -U {{ domain_join_user }}%{{ domain_join_password }}'
  # no_log: True
  become: True

- name: "Change kerberos principal to machine account"
  shell: |
    kinit -k "{{ inventory_hostname | upper }}$"
    klist
  register: postjoinshell
  become: true

- name: "Authconfig for redhat"
  shell: authconfig --enablesssdauth --enablesssd --enablemkhomedir --update
  when: ansible_os_family | lower == 'redhat'
  become: true

- name: "Configure sudoers for nsswitch"
  lineinfile:
    path: /etc/nsswitch.conf
    line: 'sudoers: files sss'
  become: true

- name: "Copy sssd configuration"
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: 0600
  notify: restart sssd
  become: true

- name: "Enable SSSD service"
  systemd:
    name: sssd
    enabled: yes
    state: restarted
  become: true

- block:
  - name: "Check for failed kinits"
    wait_for:
      timeout: 5
    delegate_to: 127.0.0.1
    run_once: true
    become: no

  - name: "retry kinit with machine principal"
    shell: |
      kinit -k "{{ inventory_hostname | upper }}$"
      klist
    register: kinit_retry
    become: true

  - name: "Debug Kinit Retry"
    debug: var=kinit_retry

  when:
    - postjoinshell.stderr is defined
    - "'failed' in postjoinshell.stderr"
